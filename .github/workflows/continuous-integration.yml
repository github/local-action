name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  workflow_dispatch: {}

permissions:
  actions: read
  checks: write
  contents: read
  statuses: write

jobs:
  continuous-integration:
    name: Continuous Integration
    runs-on: ubuntu-latest

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v6
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install Dependencies
        id: install
        run: npm ci

      - name: Check Format
        id: format
        run: npm run format:check

      - name: Lint
        id: lint
        run: npm run lint

      - name: Test
        id: test
        run: npm run ci-test

  typescript-esm-npm:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest

    name: TypeScript ESM (npm)
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout @github/local-action
        id: checkout
        uses: actions/checkout@v5
        with:
          path: local-action

      - name: Checkout TypeScript Template
        id: checkout-typescript
        uses: actions/checkout@v5
        with:
          path: typescript-action
          repository: actions/typescript-action

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v6
        with:
          node-version-file: local-action/.node-version
          cache: npm
          cache-dependency-path: local-action/package-lock.json

      - name: Install @github/local-action Dependencies
        id: install
        run: npm ci
        working-directory: local-action

      - name: Install TypeScript Template Dependencies
        id: install-typescript
        run: |
          npm ci
          npm uninstall @github/local-action
        working-directory: typescript-action

      - name: Link @github/local-action
        id: link
        run: npm link
        working-directory: local-action

      - name: Generate Dotenv File
        id: dotenv
        run: |
          echo "ACTIONS_STEP_DEBUG=true" >> .env
          echo "INPUT_MILLISECONDS=2400" >> .env
        working-directory: typescript-action

      - name: Test TypeScript Action
        id: test
        run: npm run local-action
        working-directory: typescript-action

  javascript-esm-npm:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest

    name: JavaScript ESM (npm)
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout @github/local-action
        id: checkout
        uses: actions/checkout@v5
        with:
          path: local-action

      - name: Checkout JavaScript Template
        id: checkout-javascript
        uses: actions/checkout@v5
        with:
          path: javascript-action
          repository: actions/javascript-action

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v6
        with:
          node-version-file: local-action/.node-version
          cache: npm
          cache-dependency-path: local-action/package-lock.json

      - name: Install @github/local-action Dependencies
        id: install
        run: npm ci
        working-directory: local-action

      - name: Install JavaScript Template Dependencies
        id: install-javascript
        run: |
          npm ci
          npm uninstall @github/local-action
        working-directory: javascript-action

      - name: Link @github/local-action
        id: link
        run: npm link
        working-directory: local-action

      - name: Generate Dotenv File
        id: dotenv
        run: |
          echo "ACTIONS_STEP_DEBUG=true" >> .env
          echo "INPUT_MILLISECONDS=2400" >> .env
        working-directory: javascript-action

      - name: Test JavaScript Action
        id: test
        run: npm run local-action
        working-directory: javascript-action

  typescript-esm-pnpm:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest

    name: TypeScript ESM (pnpm)
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout @github/local-action
        id: checkout
        uses: actions/checkout@v5
        with:
          path: local-action

      - name: Checkout TypeScript Template
        id: checkout-typescript
        uses: actions/checkout@v5
        with:
          path: typescript-pnpm-esm-action
          repository: ncalteen/typescript-pnpm-esm-action

      - name: Install pnpm
        id: pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v6
        with:
          node-version-file: local-action/.node-version
          cache: npm
          cache-dependency-path: local-action/package-lock.json

      - name: Install @github/local-action Dependencies
        id: install
        run: npm ci
        working-directory: local-action

      - name: Install TypeScript Template Dependencies
        id: install-typescript
        run: |
          pnpm install
          pnpm uninstall @github/local-action
        working-directory: typescript-pnpm-esm-action

      - name: Create Global Link
        id: create-link
        run: npm link
        working-directory: local-action

      - name: Use Global Link
        id: use-link
        run: pnpm link "${{ github.workspace }}/local-action"
        working-directory: typescript-pnpm-esm-action

      - name: Generate Dotenv File
        id: dotenv
        run: |
          echo "ACTIONS_STEP_DEBUG=true" >> .env
          echo "INPUT_MILLISECONDS=2400" >> .env
        working-directory: typescript-pnpm-esm-action

      - name: Test TypeScript Action
        id: test
        run: pnpm run local-action
        working-directory: typescript-pnpm-esm-action

  typescript-cjs-pnpm:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest

    name: TypeScript CJS (pnpm)
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout @github/local-action
        id: checkout
        uses: actions/checkout@v5
        with:
          path: local-action

      - name: Checkout TypeScript Template
        id: checkout-typescript
        uses: actions/checkout@v5
        with:
          path: typescript-pnpm-cjs-action
          repository: ncalteen/typescript-pnpm-cjs-action

      - name: Install pnpm
        id: pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v6
        with:
          node-version-file: local-action/.node-version
          cache: npm
          cache-dependency-path: local-action/package-lock.json

      - name: Install @github/local-action Dependencies
        id: install
        run: npm ci
        working-directory: local-action

      - name: Install TypeScript Template Dependencies
        id: install-typescript
        run: |
          pnpm install
          pnpm uninstall @github/local-action
        working-directory: typescript-pnpm-cjs-action

      - name: Create Global Link
        id: create-link
        run: npm link
        working-directory: local-action

      - name: Use Global Link
        id: use-link
        run: pnpm link "${{ github.workspace }}/local-action"
        working-directory: typescript-pnpm-cjs-action

      - name: Generate Dotenv File
        id: dotenv
        run: |
          echo "ACTIONS_STEP_DEBUG=true" >> .env
          echo "INPUT_MILLISECONDS=2400" >> .env
        working-directory: typescript-pnpm-cjs-action

      - name: Test TypeScript Action
        id: test
        run: pnpm run local-action
        working-directory: typescript-pnpm-cjs-action

  typescript-esm-yarn:
    name: TypeScript ESM (yarn)
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: local-action

    steps:
      - name: Checkout @github/local-action
        id: checkout
        uses: actions/checkout@v5
        with:
          path: local-action

      - name: Checkout TypeScript Template
        id: checkout-typescript
        uses: actions/checkout@v5
        with:
          path: typescript-yarn-esm-action
          repository: ncalteen/typescript-yarn-esm-action

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v6
        with:
          node-version-file: local-action/.node-version
          cache: npm
          cache-dependency-path: local-action/package-lock.json

      - name: Install @github/local-action Dependencies
        id: install
        run: npm ci
        working-directory: local-action

      - name: Install TypeScript Template Dependencies
        id: install-typescript
        run: |
          corepack enable
          corepack prepare yarn@4.7.0 --activate
          yarn install
        working-directory: typescript-yarn-esm-action

      - name: Create Global Link
        id: create-link
        run: npm link
        working-directory: local-action

      - name: Use Global Link
        id: use-link
        run: yarn link "${{ github.workspace }}/local-action"
        working-directory: typescript-yarn-esm-action

      - name: Generate Dotenv File
        id: dotenv
        run: |
          echo "ACTIONS_STEP_DEBUG=true" >> .env
          echo "INPUT_MILLISECONDS=2400" >> .env
        working-directory: typescript-yarn-esm-action

      - name: Test TypeScript Action
        id: test
        run: yarn run local-action
        working-directory: typescript-yarn-esm-action
