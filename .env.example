################################################################################
#    Do not commit your actual .env file to Git! This may contain secrets or   #
#                         other sensitive information.                         #
################################################################################

################################################################################
#                        @github/local-action Variables                        #
################################################################################

# Environment variables specific to the @github/local-action tool.

######################################################################
# The path to a workspace that can be used by `@github/local-action` #
# during local testing. This will be used as the root directory for  #
# any files created by your action, as well as any environment files #
# that are created automatically by `@github/local-action`. If you   #
# try to interact with the `@actions/artifact` or `@actions/cache`   #
# packages, this tool will throw an error if this is not set to a    #
# valid path.                                                        #
######################################################################
LOCAL_ACTION_WORKSPACE=""

######################################################################
# Local path where any artifacts will be saved. Will throw an error  #
# if the action attempts to use the `@actions/artifact` package      #
# without setting this value first.                                  #
######################################################################
LOCAL_ACTION_ARTIFACT_PATH=""

######################################################################
# Local path where any caches will be read or saved. Will throw an   #
# error if the action attempts to use the `@actions/cache` package   #
# without setting this value first.                                  #
######################################################################
LOCAL_ACTION_CACHE_PATH=""

################################################################################
#                            GitHub Actions Inputs                             #
#                                                                              #
# GitHub Actions inputs should follow `INPUT_<name>` format (all uppercase).   #
# Hyphens should not be converted to underscores! If your `action.yml` file    #
# contains default values for inputs, you do not need to set them here too.    #
################################################################################

INPUT_MILLISECONDS=2400

################################################################################
#                     GitHub Actions Environment Variables                     #
################################################################################

# The following variables are set for every run of a workflow and can be used in
# your action. The initial values in this file are the defaults set by GitHub
# Actions. You can override them to suit your needs.
#
# For more information, see:
# https://docs.github.com/en/actions/learn-github-actions/variables#default-environment-variables

######################################################################
# Enable/disable step debug logging. Default is normally `false`,    #
# but it is set to `true` for local debugging purposes.              #
######################################################################
ACTIONS_STEP_DEBUG=true

######################################################################
# Always set to `true`.                                              #
######################################################################
CI="true"

######################################################################
# The name of the action currently running, or the id of a step. For #
# example, the second invocation of `actions/checkout` will be       #
# `actionscheckout2`.                                                #
######################################################################
# GITHUB_ACTION=""

######################################################################
# Only supported in composite actions.                               #
######################################################################
# GITHUB_ACTION_PATH=""

######################################################################
# For a step executing an action, this is the owner and repository   #
# name of the action. For example, `actions/checkout`.               #
######################################################################
# GITHUB_ACTION_REPOSITORY=""

######################################################################
# Always set to true when GitHub Actions is running the workflow.    #
# You can use this variable to differentiate when tests are being    #
# run locally or by GitHub Actions.                                  #
######################################################################
GITHUB_ACTIONS="true"

######################################################################
# The name of the person or app that initiated the workflow. For     #
# example, `octocat`.                                                #
######################################################################
# GITHUB_ACTOR=""

######################################################################
# The account ID of the person or app that triggered the initial     #
# workflow run. For example, `1234567`. Note that this is different  #
# from the actor username.                                           #
######################################################################
# GITHUB_ACTOR_ID=""

######################################################################
# Returns the API URL. For example: `https://api.github.com`.        #
######################################################################
GITHUB_API_URL="https://api.github.com"

######################################################################
# The name of the base ref or target branch of the pull request in a #
# workflow run. This is only set when the event that triggers a      #
# workflow run is either pull_request or pull_request_target. For    #
# example, `main`.                                                   #
######################################################################
# GITHUB_BASE_REF=""

######################################################################
# The name of the event that triggered the workflow. For example,    #
# `workflow_dispatch`.                                               #
######################################################################
# GITHUB_EVENT_NAME=""

######################################################################
# The path to the file on the runner that contains the full event    #
# webhook payload. For example, `/github/workflow/event.json`.       #
######################################################################
# GITHUB_EVENT_PATH=""

######################################################################
# Returns the GraphQL API URL. For example:                          #
# `https://api.github.com/graphql`.                                  #
######################################################################
GITHUB_GRAPHQL_URL="https://api.github.com/graphql"

######################################################################
# The head ref or source branch of the pull request in a workflow    #
# run. This property is only set when the event that triggers a      #
# workflow run is either pull_request or pull_request_target. For    #
# example, `feature-branch-1`.                                       #
######################################################################
# GITHUB_HEAD_REF=""

######################################################################
# The job_id of the current job. For example, `greeting_job`.        #
######################################################################
# GITHUB_JOB=""

######################################################################
# The fully-formed ref of the branch or tag that triggered the       #
# workflow run. For workflows triggered by push, this is the branch  #
# or tag ref that was pushed. For workflows triggered by             #
# pull_request, this is the pull request merge branch. For workflows #
# triggered by release, this is the release tag created. For other   #
# triggers, this is the branch or tag ref that triggered the         #
# workflow run. This is only set if a branch or tag is available for #
# the event type. The ref given is fully-formed, meaning that for    #
# branches the format is refs/heads/<branch_name>. For pull requests #
# events except pull_request_target, it is                           #
# refs/pull/<pr_number>/merge. pull_request_target events have the   #
# ref from the base branch. For tags it is refs/tags/<tag_name>. For #
# example, refs/heads/feature-branch-1.                              #
######################################################################
# GITHUB_REF=""

######################################################################
# The short ref name of the branch or tag that triggered the         #
# workflow run. This value matches the branch or tag name shown on   #
# GitHub. For example, `feature-branch-1`. For pull requests, the    #
# format is `<pr_number>/merge`.                                     #
######################################################################
# GITHUB_REF_NAME=""

######################################################################
# `true` if branch protections or rulesets are configured for the    #
# ref that triggered the workflow run.                               #
######################################################################
# GITHUB_REF_PROTECTED=""

######################################################################
# The type of ref that triggered the workflow run. Valid values are  #
# `branch` or `tag`.                                                 #
######################################################################
# GITHUB_REF_TYPE=""

######################################################################
# The owner and repository name. For example, `octocat/Hello-World`. #
######################################################################
# GITHUB_REPOSITORY=""

######################################################################
# The ID of the repository. For example, `123456789`. Note that this #
# is different from the repository name.                             #
######################################################################
# GITHUB_REPOSITORY_ID=""

######################################################################
# The repository owner's name. For example, `octocat`.               #
######################################################################
# GITHUB_REPOSITORY_OWNER=""

######################################################################
# The repository owner's account ID. For example, `1234567`. Note    #
# that this is different from the owner's name.                      #
######################################################################
# GITHUB_REPOSITORY_OWNER_ID=""

######################################################################
# The number of days that workflow run logs and artifacts are kept.  #
# For example, 90.                                                   #
######################################################################
GITHUB_RETENTION_DAYS="90"

######################################################################
# A unique number for each attempt of a particular workflow run in a #
# repository. This number begins at `1` for the workflow run's first #
# attempt, and increments with each re-run. For example, `3`.        #
######################################################################
GITHUB_RUN_ATTEMPT="1"

######################################################################
# A unique number for each workflow run within a repository. This    #
# number does not change if you re-run the workflow run. For         #
# example, `1658821493`.                                             #
######################################################################
# GITHUB_RUN_ID=""

######################################################################
# A unique number for each run of a particular workflow in a         #
# repository. This number begins at `1` for the workflow's first     #
# run, and increments with each new run. This number  does not       #
# change if you re-run the workflow run. For example, `3`.           #
######################################################################
GITHUB_RUN_NUMBER="1"

######################################################################
# The URL of the GitHub server. For example: `https://github.com`.   #
######################################################################
GITHUB_SERVER_URL="https://github.com"

######################################################################
# The commit SHA that triggered the workflow. The value of this      #
# commit SHA depends on the event that triggered the workflow. For   #
# more information, see Events that trigger workflows. For example,  #
# `ffac537e6cbbf934b08745a378932722df287a53`.                        #
######################################################################
# GITHUB_SHA=""

######################################################################
# The username of the user that initiated the workflow run. If the   #
# workflow run is a re-run, this value may differ from               #
# `github.actor`. Any workflow re-runs will use the privileges of    #
# `github.actor`, even if the actor initiating the re-run            #
# (`github.triggering_actor`) has different privileges.              #
######################################################################
# GITHUB_TRIGGERING_ACTOR=""

######################################################################
# The name of the workflow. For example, `My test workflow``. If the #
# workflow file doesn't specify a name, the value of this variable   #
# is the full path of the workflow file in the repository.           #
######################################################################
GITHUB_WORKFLOW="Local Action"

######################################################################
# The ref path to the workflow.                                      #
######################################################################
# GITHUB_WORKFLOW_REF=""

######################################################################
# The commit SHA for the workflow file.                              #
######################################################################
# GITHUB_WORKFLOW_SHA=""

######################################################################
# The default working directory on the runner for steps, and the     #
# default location of your repository when using the checkout        #
# action. For example, `/home/runner/work/my-repo-name/repo-name`.   #
######################################################################
# GITHUB_WORKSPACE=""

######################################################################
# The architecture of the runner executing the job. Possible values  #
# are `X86`, X6`4, `ARM`, or `ARM64`.                                #
######################################################################
# RUNNER_ARCH=""

######################################################################
# This is set only if debug logging is enabled, and always has the   #
# value of 1. It can be useful as an indicator to enable additional  #
# debugging or verbose logging in your own job steps. Default is     #
# normally not set, but it is set to `1` for local debugging         #
# purposes.                                                          #
######################################################################
RUNNER_DEBUG="1"

######################################################################
# The environment of the runner executing the job. Possible values   #
# are: github-hosted for GitHub-hosted runners provided by GitHub,   #
# and self-hosted for self-hosted runners configured by the          #
# repository owner.                                                  #
######################################################################
RUNNER_ENVIRONMENT="github-hosted"

######################################################################
# The name of the runner executing the job. This name may not be     #
# unique in a workflow run as runners at the repository and          #
# organization levels could use the same name. For example,          #
# `Hosted Agent`.                                                    #
######################################################################
RUNNER_NAME="Local Action"

######################################################################
# The operating system of the runner executing the job. Possible     #
# values are `Linux`, `Windows`, or `macOS`. For example, `Windows`. #
######################################################################
# RUNNER_OS=""

######################################################################
# The path to a temporary directory on the runner. This directory is #
# emptied at the beginning and end of each job. Note that files will #
# not be removed if the runner's user account does not have          #
# permission to delete them. For example, `D:\a\_temp`.              #
######################################################################
# RUNNER_TEMP=""

######################################################################
# The path to the directory containing preinstalled tools for        #
# GitHub-hosted runners. For more information, see Using             #
# GitHub-hosted runners. For example, `C:\hostedtoolcache\windows`.  #
######################################################################
# RUNNER_TOOL_CACHE=""


################################################################################
#                       GitHub Actions Environment Files                       #
#                                                                              #
# The following variables point to specific files on the runner that are used  #
# to set environment variables, outputs, and other information. These files    #
# are created and managed by GitHub Actions.                                   #
#                                                                              #
# Currently these are not used by `@github/local-action`.                      #
################################################################################

######################################################################
# The path on the runner to the file that sets variables from        #
# workflow commands. The path to this file is unique to the current  #
# step and changes for each step in a job.                           #
######################################################################
# GITHUB_ENV=""

######################################################################
# The path on the runner to the file that sets the current step's    #
# outputs from workflow commands. The path to this file is unique to #
# the current step and changes for each step in a job.               #
######################################################################
# GITHUB_OUTPUT=""

######################################################################
# The path on the runner to the file that sets system `PATH`         #
# variables from workflow commands. The path to this file is unique  #
# to the current step and changes for each step in a job.            #
######################################################################
# GITHUB_PATH=""

######################################################################
# The path on the runner to the file that contains job summaries     #
# from workflow commands. The path to this file is unique to the     #
# current step and changes for each step in a job.                   #
######################################################################
# GITHUB_STEP_SUMMARY=""